# 2025.08.24
-------------

starting this so I have a running commentary on my changes and funny things I notice happening
in my code

today's discovery: the first version of the init_diag_value_matrix was messing with the execution
of the pvr_set_bg_color() function. originally, the function worked properly with the init_identity() matrix
function. at first i thought it was simply an emulator bug but it seemed suspicious that a single function 
would cause display corruption like that. additionally the bfont_draw_str_vram_fmt function still works
properly and displays the memory address of the dcm_file_hdr.version struct element consistently, so 
i ruled out the emulator.

i've since transposed the header and inline functions to C++ alongside main and am now reworking the diagonal
matrix loading function

changes:
	main.c   -> main.cpp
	matrix.h -> matrix.hpp
	removed contents of init_diag_value_matrix
	transposed init_identity() to C++ style inline asm

results:
	program still compiles and displays screen background color correctly

tbd: 
	complete diagonal value matrix with correct formatting and instructions


# 2025.8.24 - 21:52
-------------------

Great!! The matrix is fixed properly (thanks again Falco for the advice, switching to C++ and
figuring out constraints has really helped a lot).

notes: the ending of the 'init_identity' matrix already switches to the front bank, so
calling it at the beginning of the init_diag_value_matrix was causing issues. additionally we
are now ignoring the approach of calling the init_identity matrix function since it was a little
naive. as Falco explained to me, we cannot pass floating point values directly into the back bank
via inline asm, since the CPU doesn't really know how to do so - they must be juggled through FPUL
which is a system register that allows for transfer between floating point and general purpose regs.
the FLOAT instruction will be massively helpful here (note to self: read up more on execution cycles)

changes:
	removed init_identity() call before inline asm
	basically reconstructed identity matrix from scratch
	used fmov.s to copy the addresses of function arguments (x, y, z, w)

results:
	program compiles successfully with no warnings
	pvr_set_bg_color also functions as expected

tbd:
	finish rotation matrices (x, y, z).
